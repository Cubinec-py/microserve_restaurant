version: "3.8"

services:
  restaurant: &restaurant
    container_name: restaurant
    build:
      context: .
      dockerfile: ./docker/restaurant/Dockerfile
    volumes:
      - ./restaurant:/apps
      - static_volume:/apps/staticfiles
      - static_media:/apps/media
    networks:
      - restaurant_network
      - db_restaurant
      - nginx_network
    ports:
      - "8000:8000"
    command:
      "gunicorn --workers=2 --bind=0.0.0.0:8000 core.wsgi:application --settings=core.settings.docker"
    depends_on:
      - db_restaurant
    restart: on-failure
    healthcheck:
      test: [ "CMD", "curl", "--fail", "http://0.0.0.0:8000/admin/login/" ]
      interval: 1m
      timeout: 5s
      retries: 2

  storehouse:
    container_name: storehouse
    build:
      context: .
      dockerfile: ./docker/storehouse/Dockerfile
    volumes:
      - ./storehouse:/apps
    networks:
      - storehouse_network
      - db_storehouse
      - nginx_network
    ports:
      - "8001:8001"
    depends_on:
      - db_storehouse
    restart: on-failure
    healthcheck:
      test: [ "CMD", "curl", "--fail", "http://0.0.0.0:8001/admin/login/" ]
      interval: 1m
      timeout: 5s
      retries: 2

  db_restaurant:
    container_name: db_restaurant
    image: postgres:alpine3.17
    volumes:
      - db_restaurant:/var/lib/postgresql/data
    networks:
      - restaurant_network
      - db_restaurant
    expose:
      - 5432
    restart: on-failure
    env_file:
      - docker/restaurant/.env

  db_storehouse:
    container_name: db_storehouse
    image: postgres:alpine3.17
    volumes:
      - db_storehouse:/var/lib/postgresql/data
    networks:
      - storehouse_network
      - db_storehouse
    expose:
      - 5432
    restart: on-failure
    env_file:
      - docker/storehouse/.env

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    volumes:
      - pgadmin:/var/lib/pgadmin
    env_file:
      - docker/restaurant/.env
    ports:
      - "5050:80"
    networks:
      - restaurant_network
      - db_restaurant
    restart: unless-stopped

  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:alpine
    networks:
      - restaurant_network
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    expose:
      - 4369
      - 5671
      - 5672
      - 15672
      - 25672
    ports:
      - "5672:5672"
    restart: on-failure
    healthcheck:
      test: [ "CMD", "nc", "-z", "localhost", "5672" ]
      interval: 5s
      timeout: 15s
      retries: 1

  redis:
    container_name: redis
    image: redis:alpine
    restart: on-failure
    networks:
      - restaurant_network
    expose:
      - 6379
    volumes:
      - redis:/var/lib/redis/data
    healthcheck:
      test: [ "CMD", "redis-cli", "-h", "localhost", "ping" ]

  celery:
    <<: *restaurant
    container_name: celery
    restart: on-failure
    depends_on:
      - redis
      - rabbitmq
      - db_restaurant
      - db_storehouse
    expose: [ ]
    ports: [ ]
    networks:
      - restaurant_network
      - storehouse_network
      - db_restaurant
      - db_storehouse
    env_file:
      - docker/.env
    healthcheck:
      test: [ "CMD-SHELL", "ps ax", "|" ,"grep -v grep", "|" ,"grep celery",  "||", "exit 1" ]
      interval: 1m
      timeout: 5s
      retries: 2
    command: celery -A core worker -B -l INFO

  nginx:
    container_name: nginx
    build:
      context: .
      dockerfile: ./docker/nginx/Dockerfile
    restart: on-failure
    volumes:
      - static_volume:/apps/staticfiles
      - static_media:/apps/media
      - ./config/nginx/conf.d:/etc/nginx/conf.d
    networks:
      - nginx_network
    ports:
      - 80:80
      - 81:81
      - 5555:5555
    depends_on:
      - flower
      - restaurant
      - storehouse
    healthcheck:
      test: [ "CMD-SHELL", "ps ax", "|" ,"grep -v grep", "|" ,"grep nginx",  "||", "exit 1" ]
      interval: 30s
      timeout: 10s
      retries: 3

  flower:
    image: mher/flower:0.9.5
    container_name: flower
    networks:
      - restaurant_network
      - nginx_network
    expose:
      - 5555
    depends_on:
      - celery
      - redis
      - db_restaurant
    command: [ "--app core", "--port=5555", "--url_prefix=flower", "--broker=amqp://rabbitmq:5672", "--broker_api=amqp://rabbitmq:15672//" ]

networks:
  restaurant_network:
  storehouse_network:
  db_restaurant:
  db_storehouse:
  nginx_network:
    driver: bridge

volumes:
  db_restaurant:
  db_storehouse:
  pgadmin:
  redis:
  rabbitmq_data:
  static_volume:
  static_media: